import React,{useState,useEffect} from "react";
import "react-responsive-carousel/lib/styles/carousel.min.css"; // requires a loader
import { Carousel } from "react-responsive-carousel";
import { aboutme } from "../../constants/Navbarconstants";

const Banner = () => {
  const [figure, setfigure] = useState(0);
  const [buttondo, setbuttondo] = useState(true);
  const [iswhite, setiswhite] = useState(true);
  const svgdata=[
    "M0,160L26.7,170.7C53.3,181,107,203,160,197.3C213.3,192,267,160,320,122.7C373.3,85,427,43,480,53.3C533.3,64,587,128,640,160C693.3,192,747,192,800,165.3C853.3,139,907,85,960,80C1013.3,75,1067,117,1120,128C1173.3,139,1227,117,1280,122.7C1333.3,128,1387,160,1413,176L1440,192L1440,320L1413.3,320C1386.7,320,1333,320,1280,320C1226.7,320,1173,320,1120,320C1066.7,320,1013,320,960,320C906.7,320,853,320,800,320C746.7,320,693,320,640,320C586.7,320,533,320,480,320C426.7,320,373,320,320,320C266.7,320,213,320,160,320C106.7,320,53,320,27,320L0,320Z",
    "M0,160L40,149.3C80,139,160,117,240,96C320,75,400,53,480,80C560,107,640,181,720,202.7C800,224,880,192,960,160C1040,128,1120,96,1200,74.7C1280,53,1360,43,1400,37.3L1440,32L1440,320L1400,320C1360,320,1280,320,1200,320C1120,320,1040,320,960,320C880,320,800,320,720,320C640,320,560,320,480,320C400,320,320,320,240,320C160,320,80,320,40,320L0,320Z",
    "M0,160L26.7,154.7C53.3,149,107,139,160,128C213.3,117,267,107,320,117.3C373.3,128,427,160,480,176C533.3,192,587,192,640,160C693.3,128,747,64,800,64C853.3,64,907,128,960,144C1013.3,160,1067,128,1120,144C1173.3,160,1227,224,1280,250.7C1333.3,277,1387,267,1413,261.3L1440,256L1440,320L1413.3,320C1386.7,320,1333,320,1280,320C1226.7,320,1173,320,1120,320C1066.7,320,1013,320,960,320C906.7,320,853,320,800,320C746.7,320,693,320,640,320C586.7,320,533,320,480,320C426.7,320,373,320,320,320C266.7,320,213,320,160,320C106.7,320,53,320,27,320L0,320Z",
    "M0,192L10.9,176C21.8,160,44,128,65,128C87.3,128,109,160,131,154.7C152.7,149,175,107,196,96C218.2,85,240,107,262,96C283.6,85,305,43,327,74.7C349.1,107,371,213,393,218.7C414.5,224,436,128,458,96C480,64,502,96,524,96C545.5,96,567,64,589,85.3C610.9,107,633,181,655,208C676.4,235,698,213,720,202.7C741.8,192,764,192,785,192C807.3,192,829,192,851,202.7C872.7,213,895,235,916,250.7C938.2,267,960,277,982,256C1003.6,235,1025,181,1047,176C1069.1,171,1091,213,1113,202.7C1134.5,192,1156,128,1178,101.3C1200,75,1222,85,1244,96C1265.5,107,1287,117,1309,138.7C1330.9,160,1353,192,1375,202.7C1396.4,213,1418,203,1429,197.3L1440,192L1440,320L1429.1,320C1418.2,320,1396,320,1375,320C1352.7,320,1331,320,1309,320C1287.3,320,1265,320,1244,320C1221.8,320,1200,320,1178,320C1156.4,320,1135,320,1113,320C1090.9,320,1069,320,1047,320C1025.5,320,1004,320,982,320C960,320,938,320,916,320C894.5,320,873,320,851,320C829.1,320,807,320,785,320C763.6,320,742,320,720,320C698.2,320,676,320,655,320C632.7,320,611,320,589,320C567.3,320,545,320,524,320C501.8,320,480,320,458,320C436.4,320,415,320,393,320C370.9,320,349,320,327,320C305.5,320,284,320,262,320C240,320,218,320,196,320C174.5,320,153,320,131,320C109.1,320,87,320,65,320C43.6,320,22,320,11,320L0,320Z",
    "M0,96L17.1,133.3C34.3,171,69,245,103,256C137.1,267,171,213,206,202.7C240,192,274,224,309,197.3C342.9,171,377,85,411,90.7C445.7,96,480,192,514,208C548.6,224,583,160,617,122.7C651.4,85,686,75,720,101.3C754.3,128,789,192,823,186.7C857.1,181,891,107,926,112C960,117,994,203,1029,245.3C1062.9,288,1097,288,1131,245.3C1165.7,203,1200,117,1234,80C1268.6,43,1303,53,1337,74.7C1371.4,96,1406,128,1423,144L1440,160L1440,320L1422.9,320C1405.7,320,1371,320,1337,320C1302.9,320,1269,320,1234,320C1200,320,1166,320,1131,320C1097.1,320,1063,320,1029,320C994.3,320,960,320,926,320C891.4,320,857,320,823,320C788.6,320,754,320,720,320C685.7,320,651,320,617,320C582.9,320,549,320,514,320C480,320,446,320,411,320C377.1,320,343,320,309,320C274.3,320,240,320,206,320C171.4,320,137,320,103,320C68.6,320,34,320,17,320L0,320Z",
    "M0,160L26.7,170.7C53.3,181,107,203,160,197.3C213.3,192,267,160,320,122.7C373.3,85,427,43,480,53.3C533.3,64,587,128,640,160C693.3,192,747,192,800,165.3C853.3,139,907,85,960,80C1013.3,75,1067,117,1120,128C1173.3,139,1227,117,1280,122.7C1333.3,128,1387,160,1413,176L1440,192L1440,320L1413.3,320C1386.7,320,1333,320,1280,320C1226.7,320,1173,320,1120,320C1066.7,320,1013,320,960,320C906.7,320,853,320,800,320C746.7,320,693,320,640,320C586.7,320,533,320,480,320C426.7,320,373,320,320,320C266.7,320,213,320,160,320C106.7,320,53,320,27,320L0,320Z",
    "M0,160L40,149.3C80,139,160,117,240,96C320,75,400,53,480,80C560,107,640,181,720,202.7C800,224,880,192,960,160C1040,128,1120,96,1200,74.7C1280,53,1360,43,1400,37.3L1440,32L1440,320L1400,320C1360,320,1280,320,1200,320C1120,320,1040,320,960,320C880,320,800,320,720,320C640,320,560,320,480,320C400,320,320,320,240,320C160,320,80,320,40,320L0,320Z",
    "M0,160L26.7,154.7C53.3,149,107,139,160,128C213.3,117,267,107,320,117.3C373.3,128,427,160,480,176C533.3,192,587,192,640,160C693.3,128,747,64,800,64C853.3,64,907,128,960,144C1013.3,160,1067,128,1120,144C1173.3,160,1227,224,1280,250.7C1333.3,277,1387,267,1413,261.3L1440,256L1440,320L1413.3,320C1386.7,320,1333,320,1280,320C1226.7,320,1173,320,1120,320C1066.7,320,1013,320,960,320C906.7,320,853,320,800,320C746.7,320,693,320,640,320C586.7,320,533,320,480,320C426.7,320,373,320,320,320C266.7,320,213,320,160,320C106.7,320,53,320,27,320L0,320Z",
    "M0,192L10.9,176C21.8,160,44,128,65,128C87.3,128,109,160,131,154.7C152.7,149,175,107,196,96C218.2,85,240,107,262,96C283.6,85,305,43,327,74.7C349.1,107,371,213,393,218.7C414.5,224,436,128,458,96C480,64,502,96,524,96C545.5,96,567,64,589,85.3C610.9,107,633,181,655,208C676.4,235,698,213,720,202.7C741.8,192,764,192,785,192C807.3,192,829,192,851,202.7C872.7,213,895,235,916,250.7C938.2,267,960,277,982,256C1003.6,235,1025,181,1047,176C1069.1,171,1091,213,1113,202.7C1134.5,192,1156,128,1178,101.3C1200,75,1222,85,1244,96C1265.5,107,1287,117,1309,138.7C1330.9,160,1353,192,1375,202.7C1396.4,213,1418,203,1429,197.3L1440,192L1440,320L1429.1,320C1418.2,320,1396,320,1375,320C1352.7,320,1331,320,1309,320C1287.3,320,1265,320,1244,320C1221.8,320,1200,320,1178,320C1156.4,320,1135,320,1113,320C1090.9,320,1069,320,1047,320C1025.5,320,1004,320,982,320C960,320,938,320,916,320C894.5,320,873,320,851,320C829.1,320,807,320,785,320C763.6,320,742,320,720,320C698.2,320,676,320,655,320C632.7,320,611,320,589,320C567.3,320,545,320,524,320C501.8,320,480,320,458,320C436.4,320,415,320,393,320C370.9,320,349,320,327,320C305.5,320,284,320,262,320C240,320,218,320,196,320C174.5,320,153,320,131,320C109.1,320,87,320,65,320C43.6,320,22,320,11,320L0,320Z",
    "M0,96L17.1,133.3C34.3,171,69,245,103,256C137.1,267,171,213,206,202.7C240,192,274,224,309,197.3C342.9,171,377,85,411,90.7C445.7,96,480,192,514,208C548.6,224,583,160,617,122.7C651.4,85,686,75,720,101.3C754.3,128,789,192,823,186.7C857.1,181,891,107,926,112C960,117,994,203,1029,245.3C1062.9,288,1097,288,1131,245.3C1165.7,203,1200,117,1234,80C1268.6,43,1303,53,1337,74.7C1371.4,96,1406,128,1423,144L1440,160L1440,320L1422.9,320C1405.7,320,1371,320,1337,320C1302.9,320,1269,320,1234,320C1200,320,1166,320,1131,320C1097.1,320,1063,320,1029,320C994.3,320,960,320,926,320C891.4,320,857,320,823,320C788.6,320,754,320,720,320C685.7,320,651,320,617,320C582.9,320,549,320,514,320C480,320,446,320,411,320C377.1,320,343,320,309,320C274.3,320,240,320,206,320C171.4,320,137,320,103,320C68.6,320,34,320,17,320L0,320Z",
  ]
    useEffect(() => {
    let temp=window.document.documentElement.classList[0]
    console.log(iswhite)
    console.log("----------------------------")
    if(temp === 'dark'){
      setiswhite(false)
    }
    const min = 0;
    const max = 9;
    const rand = parseInt(min + Math.random() * (max - min));
    setfigure(rand)
    }, [buttondo])
  return (
    <>
      <div className="bg-gradient-to-r from-purple-400 via-pink-500 to-red-500 flex flex-col items-center justify-center min-h-screen mx-8 -mt-2 dark:bg-black">
        <h1 className="text-4xl font-bold text-white">
          Nikhil Nair <br />
          <span class="mx-10">a.k.a</span>
          <br /> Captain-K
        </h1>
        <br />
        <Carousel
          dynamicHeight={true}
          autoPlay={true}
          showStatus={false}
          showIndicators={false}
          infiniteLoop={true}
        >
          {aboutme.map((i, j) => (
            <h1 className="text-white font-bold dark:white text-2xl ">{i}</h1>
          ))}
        </Carousel>
        <button onClick={()=>setbuttondo(!buttondo)} class="px-4 py-2 font-medium tracking-wide text-white capitalize transition-colors duration-200 transform bg-blue-600 rounded-md dark:bg-gray-800 hover:bg-blue-500 dark:hover:bg-gray-700 focus:outline-none focus:bg-blue-500 dark:focus:bg-gray-700">
          Primary
        </button>
      </div>
  <div className="inline">
  {iswhite &&
          <svg
          class="-mt-64 fill-current dark:text-black"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 1440 320"
        >
          <path
            fill="#ffffff"
            fill-opacity="1"
            d={svgdata[figure]}
          ></path>
        </svg>
  }
  {!iswhite &&
 (
             <svg
          class="-mt-64 fill-current dark:text-black"
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 1440 320"
        >
          <path
            fill="#000000"
            fill-opacity="1"
            d={svgdata[figure]}
          ></path>
        </svg>
 )}
</div>
    </>
  );
};

export default Banner;
